---
launch:
  - arg: {name: conf_name}

  # Example Node 1
  - arg: {name: launch_example_1_node, default: 'false'}
  - node:
      if: $(var launch_example_1_node)
      pkg: dcist_launch_system
      exec: example_1_node
      name: example_1_node
      param:
        - from: $(find-pkg-share dcist_launch_system)/config/$(var conf_name)/example_1_node.yaml

  # Nominal Node
  - arg: {name: launch_nominal_node, default: 'false'}
  - node:
      if: $(var launch_nominal_node)
      pkg: ros_system_monitor
      exec: example_monitored_node
      name: nominal_monitored_node
      param:
        - from: $(find-pkg-share dcist_launch_system)/config/$(var conf_name)/nominal_monitored_node.yaml
      remap:
        - {from: ~/node_status, to: /ros_system_monitor/node_diagnostic_collector}

  # Warning Node
  - arg: {name: launch_warning_node, default: 'false'}
  - node:
      if: $(var launch_warning_node)
      pkg: ros_system_monitor
      exec: example_monitored_node
      name: warning_monitored_node
      param:
        - from: $(find-pkg-share dcist_launch_system)/config/$(var conf_name)/warning_monitored_node.yaml
      remap:
        - {from: ~/node_status, to: /ros_system_monitor/node_diagnostic_collector}

  # Example 2 Node
  - arg: {name: launch_example_2_node, default: 'false'}
  - node: {if: $(var launch_example_2_node), pkg: dcist_launch_system, exec: example_2_node, name: example_2_node}

  # Hydra
  - arg: {name: launch_hydra, default: 'false'}
  - set_remap: {if: $(var launch_hydra), from: hydra/status, to: /ros_system_monitor/hydra/status}
  - include: {if: $(var launch_hydra), file: $(find-pkg-share dcist_launch_system)/launch/hydra/uhumans2.launch.yaml}

  # Hydra Visualizer
  - arg: {name: launch_hydra_visualizer, default: 'false'}
  - set_remap: {if: $(var launch_hydra_visualizer), from: hydra_visualizer/dsg, to: hydra/backend/dsg}
  - include:
      if: $(var launch_hydra_visualizer)
      file: $(find-pkg-share hydra_visualizer)/launch/streaming_visualizer.launch.yaml
      arg:
        - {name: visualizer_frame, value: map}

  # ROMAN Map
  - arg: {name: launch_roman_map, default: 'false'}
  - include: 
      if: $(var launch_roman_map)
      file: $(find-pkg-share dcist_launch_system)/launch/roman/fastsam.launch.yaml
      arg:
        - {name: conf_name, value: $(var conf_name)}
  - include: 
      if: $(var launch_roman_map)
      file: $(find-pkg-share dcist_launch_system)/launch/roman/roman_map.launch.yaml
      arg:
        - {name: conf_name, value: $(var conf_name)}

  # Spot Executor
  - arg: {name: launch_spot_executor, default: 'false'}
  - node:
      if: "$(var launch_spot_executor)"
      pkg: spot_tools_ros
      exec: spot_executor_node
      name: spot_executor_node
      param:
          - from: $(find-pkg-share dcist_launch_system)/config/$(var conf_name)/spot_executor_node.yaml
            allow_substs: true
      remap:
          - from: ~/node_status
            to: /ros_system_monitor/node_diagnostic_collector

  # Spot state publisher
  - arg: {name: launch_spot_state_publisher, default: 'false'}
  - node:
      if: "$(var launch_spot_state_publisher)"
      pkg: robot_state_publisher
      name: robot_state_publisher
      exec: robot_state_publisher
      param:
          - from: $(find-pkg-share dcist_launch_system)/config/$(var conf_name)/spot_urdf.yaml
      remap:
          - from: /joint_states
            to: /spot_executor_node/joint_states

  # Rviz
  - arg: {name: 'launch_rviz', default: 'false'}
  - node:
      if: "$(var launch_rviz)"
      pkg: rviz2
      exec: "rviz2"
      name: "rviz2_node"
      args: "-d $(find-pkg-share dcist_launch_system)/rviz/dcist.rviz"
