---
launch:
  - arg: {name: verbosity, default: '0'}
  - arg: {name: conf_name}
  - arg: {name: model_name, default: ade20k-efficientvit_seg_l2}
  - arg: {name: labelspace_name, default: ade20k_mit, description: Label remapping configuration}
  # frontleft camera
  - set_remap: {from: hydra/input/frontleft/depth_registered/image_rect, to: /spot/depth/frontleft/depth_in_visual}
  - set_remap: {from: hydra/input/frontleft/rgb/image_raw, to: /spot/camera/frontleft/image}
  - set_remap: {from: hydra/input/frontleft/rgb/camera_info, to: /spot/camera/frontleft/camera_info}
  - set_remap: {from: hydra/input/frontleft/semantic/image_raw, to: /spot/frontleft/semantic/image_raw}
  - set_remap: {from: /spot/frontleft/color/image_raw, to: /spot/camera/frontleft/image}
  - node:
      pkg: semantic_inference_ros
      exec: closed_set_node
      namespace: spot/frontleft
      name: segmentation
      args: >
        --config-utilities-file $(find-pkg-share semantic_inference_ros)/config/models/$(var model_name).yaml
        --config-utilities-file $(find-pkg-share semantic_inference_ros)/config/label_groupings/$(var labelspace_name).yaml@output/recolor
        --config-utilities-yaml {output: {recolor: {colormap_path: $(find-pkg-share semantic_inference_ros)/config/distinct_150_colors.csv}}}
        --config-utilities-yaml {segmenter: {model: {model_file: $(var model_name).onnx}}}
        --config-utilities-yaml {worker: {max_queue_size: 1, image_separation_s: 0.0}}
        --config-utilities-yaml {image_rotator: {rotation: ROTATE_90_CLOCKWISE}}
  # frontright camera
  - set_remap: {from: hydra/input/frontright/depth_registered/image_rect, to: /spot/depth/frontright/depth_in_visual}
  - set_remap: {from: hydra/input/frontright/rgb/image_raw, to: /spot/camera/frontright/image}
  - set_remap: {from: hydra/input/frontright/rgb/camera_info, to: /spot/camera/frontright/camera_info}
  - set_remap: {from: hydra/input/frontright/semantic/image_raw, to: /spot/frontright/semantic/image_raw}
  - set_remap: {from: /spot/frontright/color/image_raw, to: /spot/camera/frontright/image}
  - node:
      pkg: semantic_inference_ros
      exec: closed_set_node
      namespace: spot/frontright
      name: segmentation
      args: >
        --config-utilities-file $(find-pkg-share semantic_inference_ros)/config/models/$(var model_name).yaml
        --config-utilities-file $(find-pkg-share semantic_inference_ros)/config/label_groupings/$(var labelspace_name).yaml@output/recolor
        --config-utilities-yaml {output: {recolor: {colormap_path: $(find-pkg-share semantic_inference_ros)/config/distinct_150_colors.csv}}}
        --config-utilities-yaml {segmenter: {model: {model_file: $(var model_name).onnx}}}
        --config-utilities-yaml {worker: {max_queue_size: 1, image_separation_s: 0.0}}
        --config-utilities-yaml {image_rotator: {rotation: ROTATE_90_CLOCKWISE}}
  # hydra
  - node:
      pkg: hydra_ros
      exec: hydra_ros_node
      name: hydra
      param:
        - {name: use_sim_time, value: true}
      args: >
        --config-utilities-file $(find-pkg-share dcist_launch_system)/config/$(var conf_name)/spot_hydra.yaml
        --config-utilities-file $(find-pkg-share hydra)/config/label_spaces/$(var labelspace_name)_label_space.yaml
        --config-utilities-yaml {glog_level: 0, glog_verbosity: $(var verbosity)}
        --config-utilities-yaml {robot_id: 0, odom_frame: vision, robot_frame: body, map_frame: map}
        --config-utilities-yaml {log_path: $(env HOME)/.hydra/adt4}
